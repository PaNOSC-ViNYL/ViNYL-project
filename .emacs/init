(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(org-export-backends (quote (taskjuggler)))
 '(inhibit-startup-screen t)
 '(org-log-done (quote note))
 '(org-log-done-with-time nil)
 '(org-log-into-drawer t)
 '(org-log-redeadline (quote note))
 '(org-log-refile (quote note))
 '(org-log-repeat (quote note))
 '(org-log-reschedule (quote note))
 '(package-selected-packages
   (quote
    (tj3-mode org-chef )))
)



(require 'ox-taskjuggler)

(setq org-taskjuggler-default-reports
'("textreport report \"index\" {
formats html
header '== %title =='
center -8<-
[#Plan Plan] | [#Resource_Allocation Resource Allocation] | [#Task_sprint2021 Sprint 2021] | [#Resource_sprint2021 Sprint 2021]
----
=== Sprint2021 ===
<[report id=\"Task_sprint2021\"]>
<[report id=\"Resource_sprint2021\"]>
----
=== Plan ===
<[report id=\"plan\"]>
----
=== Resource Allocation ===
<[report id=\"resourceGraph\"]>
->8-
}
#
taskreport Task_sprint2021 \"\" {
headline \"Sprint2021 Plan\"
hidetask ~sprint2021
columns bsi, name, start, end, maxend {cellcolor plan.end > plan.maxend \"#FF0000\" }, effort { celltext plan.status = \"done\" \"DONE\"},  effortleft, status, chart { width 1500 scale day}
loadunit shortauto
hideresource 1
start 2021-12-01
end 2021-12-15
}
resourcereport Resource_sprint2021 \"\" {
headline \"Resource Allocation Graph for Sprint2021\"
columns no, bsi, name,  daily { width 1000 }
loadunit shortauto
hidetask ~(isleaf() & isleaf_() & sprint2021)
sorttasks plan.start.up
start 2021-12-01
}
# A traditional Gantt chart with a project overview.
taskreport plan \"\" {
headline \"Project Plan\"
columns bsi, name, start, end, maxend {cellcolor plan.end > plan.maxend \"#FF0000\" }, effort { celltext plan.status = \"done\" \"DONE\"},  effortleft, status, chart { width 1500 }
loadunit shortauto
hideresource 1
}
# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph \"\" {
headline \"Resource Allocation Graph\"
columns no, bsi, name,  weekly { width 1000 }
loadunit shortauto
hidetask ~(isleaf() & isleaf_())
sorttasks plan.start.up
}")
)

	
(setq org-taskjuggler-default-global-properties
  "flags sprint2021"
  )

(setq org-taskjuggler-default-project-duration 999)
(setq org-priority-highest 65)
(setq org-priority-lowest 67)
(setq org-priority-default 66)
(setq org-taskjuggler-valid-task-attributes
'(account  note duration endbuffer endcredit end
flags journalentry length  maxend maxstart minend
minstart period reference responsible scheduling
startbuffer startcredit statusnote chargeset charge booking effortdone))

(setq org-log-done-with-time nil)

;(add-to-list 'load-path (concat user-emacs-directory "lisp/elgantt/")) ;; Or wherever it is located
;(require 'elgantt)
(provide '.emacs)

;;; .emacs ends here
